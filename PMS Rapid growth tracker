import pandas as pd
import matplotlib.pyplot as plt

def plot_line_graph(df, company, column, title, ylabel):
    """
    Plot a line graph of total values for the specified column over time.

    :param df: DataFrame containing the data.
    :param company: Company name to filter the data.
    :param column: Column to plot values for.
    :param title: Title of the plot.
    :param ylabel: Label for the Y-axis.
    """
    company_data = df[df['Portfolio_Manager'] == company]
    company_data = company_data.sort_values(by=['Year', 'Month'])

    plt.figure(figsize=(10, 6))
    plt.plot(company_data['Year'].astype(str) + '-' + company_data['Month'].astype(str), 
             company_data[column], marker='o', color='skyblue', label=column)
    plt.title(title)
    plt.xlabel('Time')
    plt.ylabel(ylabel)
    plt.xticks(rotation=45)
    plt.grid(axis='y')
    plt.tight_layout()
    plt.legend()
    plt.show()

def analyze_top_percentage_changes(csv_file):
    """
    Analyze percentage changes in Total_AUM and Total_Clients for companies and print the top 3 companies
    with the largest percentage increase and decrease between Jan 2021 and Nov 2024.
    """
    try:
        # Read the CSV file
        df = pd.read_csv(csv_file)

        # Filter data for Jan 2021 and Nov 2024
        jan_2021 = df[(df['Year'] == 2021) & (df['Month'] == 1)][['Portfolio_Manager', 'Total_AUM', 'Total_Clients']]
        nov_2024 = df[(df['Year'] == 2024) & (df['Month'] == 11)][['Portfolio_Manager', 'Total_AUM', 'Total_Clients']]

        # Merge the data on Portfolio_Manager
        merged = pd.merge(jan_2021, nov_2024, on='Portfolio_Manager', suffixes=('_Jan2021', '_Nov2024'))

        # Exclude rows where the base value is zero to avoid division by zero
        merged = merged[(merged['Total_AUM_Jan2021'] != 0) & (merged['Total_Clients_Jan2021'] != 0)]

        # Calculate percentage changes
        merged['AUM_Percent_Change'] = ((merged['Total_AUM_Nov2024'] - merged['Total_AUM_Jan2021']) / 
                                        merged['Total_AUM_Jan2021']) * 100
        merged['Clients_Percent_Change'] = ((merged['Total_Clients_Nov2024'] - merged['Total_Clients_Jan2021']) / 
                                             merged['Total_Clients_Jan2021']) * 100

        # Sort by largest percentage increase and decrease for AUM
        largest_aum_increase = merged.nlargest(3, 'AUM_Percent_Change')
        largest_aum_decrease = merged.nsmallest(3, 'AUM_Percent_Change')

        # Sort by largest percentage increase and decrease for Clients
        largest_clients_increase = merged.nlargest(3, 'Clients_Percent_Change')
        largest_clients_decrease = merged.nsmallest(3, 'Clients_Percent_Change')

        print("Top 3 companies with largest % increase in Total_AUM between Jan 2021 and Nov 2024:")
        print("-" * 50)
        for _, row in largest_aum_increase.iterrows():
            print(f"Company: {row['Portfolio_Manager']}, % AUM Increase: {row['AUM_Percent_Change']:.2f}%")
            cagr = (((row['Total_AUM_Nov2024'] / row['Total_AUM_Jan2021']) ** (1 / (2024 - 2021))) - 1) * 100
            print(f"CAGR: {cagr:.2f}%")
            plot_line_graph(df, row['Portfolio_Manager'], 'Total_AUM', 
                            f"{row['Portfolio_Manager']} - Total AUM Over Time", "Total AUM")

        print("\nTop 3 companies with largest % decrease in Total_AUM between Jan 2021 and Nov 2024:")
        print("-" * 50)
        for _, row in largest_aum_decrease.iterrows():
            print(f"Company: {row['Portfolio_Manager']}, % AUM Decrease: {row['AUM_Percent_Change']:.2f}%")
            cagr = (((row['Total_AUM_Nov2024'] / row['Total_AUM_Jan2021']) ** (1 / (2024 - 2021))) - 1) * 100
            print(f"CAGR: {cagr:.2f}%")
            plot_line_graph(df, row['Portfolio_Manager'], 'Total_AUM', 
                            f"{row['Portfolio_Manager']} - Total AUM Over Time", "Total AUM")

        print("\nTop 3 companies with largest % increase in Total_Clients between Jan 2021 and Nov 2024:")
        print("-" * 50)
        for _, row in largest_clients_increase.iterrows():
            print(f"Company: {row['Portfolio_Manager']}, % Clients Increase: {row['Clients_Percent_Change']:.2f}%")
            cagr = (((row['Total_Clients_Nov2024'] / row['Total_Clients_Jan2021']) ** (1 / (2024 - 2021))) - 1) * 100
            print(f"CAGR: {cagr:.2f}%")
            plot_line_graph(df, row['Portfolio_Manager'], 'Total_Clients', 
                            f"{row['Portfolio_Manager']} - Total Clients Over Time", "Total Clients")

        print("\nTop 3 companies with largest % decrease in Total_Clients between Jan 2021 and Nov 2024:")
        print("-" * 50)
        for _, row in largest_clients_decrease.iterrows():
            print(f"Company: {row['Portfolio_Manager']}, % Clients Decrease: {row['Clients_Percent_Change']:.2f}%")
            cagr = (((row['Total_Clients_Nov2024'] / row['Total_Clients_Jan2021']) ** (1 / (2024 - 2021))) - 1) * 100
            print(f"CAGR: {cagr:.2f}%")
            plot_line_graph(df, row['Portfolio_Manager'], 'Total_Clients', 
                            f"{row['Portfolio_Manager']} - Total Clients Over Time", "Total Clients")

    except FileNotFoundError:
        print(f"Error: Could not find the file '{csv_file}'")
    except Exception as e:
        print(f"An error occurred: {str(e)}")

def main():
    csv_file = '/content/sebi_portfolio_data_complete (1).csv'

    print("Analyzing percentage changes in Total_AUM and Total_Clients...")
    analyze_top_percentage_changes(csv_file)

if __name__ == "__main__":
    main()
